name: CaijiGuangdongip

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  #schedule:
    #- cron: "01 */1 * * *"

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  GITHUB_REGISTRY_PASSWORD: "${{ secrets.GITHUB_REGISTRY_PASSWORD }}"

  build:
    name: Pull
    runs-on: ubuntu-latest
    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    # 增加可用磁盘空间
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:

        root-reserve-mb: 2048
        swap-size-mb: 128
        remove-dotnet: 'true'
        remove-haskell: 'true'
        # 如果空间还是不够用，可以把以下开启，清理出更多空间
        # remove-android: 'true'
        # remove-codeql: 'true'
        build-mount-path: '/var/lib/docker/'

    - name: Restart docker
      run: sudo service docker restart

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push image Aliyun
      run: |
        docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY
        # 数据预处理,判断镜像是否重名
        declare -A duplicate_images
        declare -A temp_map
        while IFS= read -r line || [ -n "$line" ]; do
            # 忽略空行与注释
            [[ -z "$line" ]] && continue
            if echo "$line" | grep -q '^\s*#'; then
                continue
            fi

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y yt-dlp sed nmap
      
    - name: Run Multitest Script
      #working-directory: iptv/speedtest
      run: |
        cd $GITHUB_WORKSPACE/speedtest
        bash ./CaijiGuangdongip.sh
    - name: Update Results
      run: |
        cd $GITHUB_WORKSPACE/speedtest
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update results"
        git push
